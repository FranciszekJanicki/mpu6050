#ifndef MPU6050_MPU6050_CONFIG_H
#define MPU6050_MPU6050_CONFIG_H

#include "mpu6050_registers.h"
#include <stddef.h>
#include <stdint.h>

enum {
    MPU6050_GYRO_OUTPUT_RATE_DLPF_EN_HZ = 1000U,
    MPU6050_GYRO_OUTPUT_RATE_DLPF_DIS_HZ = 8000U,
    MPU6050_ACCEL_OUTPUT_RATE_HZ = 1000U,
    MPU6050_FIFO_DEFAULT_TIMEOUT = 11000U,
    MPU6050_FIFO_MAX_COUNT = 1024U
};

typedef float float32_t;

typedef struct {
    int16_t x;
    int16_t y;
    int16_t z;
} vec3_int16_t;

typedef struct {
    float32_t x;
    float32_t y;
    float32_t z;
} vec3_float32_t;

typedef struct {
    int16_t w;
    int16_t x;
    int16_t y;
    int16_t z;
} quat3_int16_t;

typedef struct {
    float32_t w;
    float32_t x;
    float32_t y;
    float32_t z;
} quat3_float32_t;

typedef enum {
    MPU6050_ERR_OK = 0,
    MPU6050_ERR_FAIL = 1 << 0,
    MPU6050_ERR_NULL = 1 << 1,
} mpu6050_err_t;

typedef enum {
    MPU6050_SLAVE_NUM_0,
    MPU6050_SLAVE_NUM_1,
    MPU6050_SLAVE_NUM_2,
} mpu6050_slave_num_t;

typedef enum {
    MPU6050_DEV_ADDRESS_AD0_LOW = 0x68,
    MPU6050_DEV_ADDRESS_AD0_HIGH = 0x69,
} mpu6050_dev_address_t;

typedef enum {
    MPU6050_REG_ADDRESS_XG_OFFS_TC = 0x00,
    MPU6050_REG_ADDRESS_YG_OFFS_TC = 0x01,
    MPU6050_REG_ADDRESS_ZG_OFFS_TC = 0x02,
    MPU6050_REG_ADDRESS_X_FINE_GAIN = 0x03,
    MPU6050_REG_ADDRESS_Y_FINE_GAIN = 0x04,
    MPU6050_REG_ADDRESS_Z_FINE_GAIN = 0x05,
    MPU6050_REG_ADDRESS_XA_OFFS_H = 0x06,
    MPU6050_REG_ADDRESS_XA_OFFS_L = 0x07,
    MPU6050_REG_ADDRESS_YA_OFFS_H = 0x08,
    MPU6050_REG_ADDRESS_YA_OFFS_L = 0x09,
    MPU6050_REG_ADDRESS_ZA_OFFS_H = 0x0A,
    MPU6050_REG_ADDRESS_ZA_OFFS_LC = 0x0B,
    MPU6050_REG_ADDRESS_SELF_TEST_X = 0x0D,
    MPU6050_REG_ADDRESS_SELF_TEST_Y = 0x0E,
    MPU6050_REG_ADDRESS_SELF_TEST_Z = 0x0F,
    MPU6050_REG_ADDRESS_SELF_TEST_A = 0x10,
    MPU6050_REG_ADDRESS_XG_OFFS_USR_H = 0x13,
    MPU6050_REG_ADDRESS_XG_OFFS_USR_L = 0x14,
    MPU6050_REG_ADDRESS_YG_OFFS_USR_H = 0x15,
    MPU6050_REG_ADDRESS_YG_OFFS_USR_L = 0x16,
    MPU6050_REG_ADDRESS_ZG_OFFS_USR_H = 0x17,
    MPU6050_REG_ADDRESS_ZG_OFFS_USR_L = 0x18,
    MPU6050_REG_ADDRESS_SMPLRT_DIV = 0x19,
    MPU6050_REG_ADDRESS_CONFIG = 0x1A,
    MPU6050_REG_ADDRESS_GYRO_CONFIG = 0x1B,
    MPU6050_REG_ADDRESS_ACCEL_CONFIG = 0x1C,
    MPU6050_REG_ADDRESS_FF_THR = 0x1D,
    MPU6050_REG_ADDRESS_FF_DUR = 0x1E,
    MPU6050_REG_ADDRESS_MOT_THR = 0x1F,
    MPU6050_REG_ADDRESS_MOT_DUR = 0x20,
    MPU6050_REG_ADDRESS_ZRMOT_THR = 0x21,
    MPU6050_REG_ADDRESS_ZRMOT_DUR = 0x22,
    MPU6050_REG_ADDRESS_FIFO_EN = 0x23,
    MPU6050_REG_ADDRESS_I2C_MST_CTRL = 0x24,
    MPU6050_REG_ADDRESS_I2C_SLV0_ADDR = 0x25,
    MPU6050_REG_ADDRESS_I2C_SLV0_REG = 0x26,
    MPU6050_REG_ADDRESS_I2C_SLV0_CTRL = 0x27,
    MPU6050_REG_ADDRESS_I2C_SLV1_ADDR = 0x28,
    MPU6050_REG_ADDRESS_I2C_SLV1_REG = 0x29,
    MPU6050_REG_ADDRESS_I2C_SLV1_CTRL = 0x2A,
    MPU6050_REG_ADDRESS_I2C_SLV2_ADDR = 0x2B,
    MPU6050_REG_ADDRESS_I2C_SLV2_REG = 0x2C,
    MPU6050_REG_ADDRESS_I2C_SLV2_CTRL = 0x2D,
    MPU6050_REG_ADDRESS_I2C_SLV3_ADDR = 0x2E,
    MPU6050_REG_ADDRESS_I2C_SLV3_REG = 0x2F,
    MPU6050_REG_ADDRESS_I2C_SLV3_CTRL = 0x30,
    MPU6050_REG_ADDRESS_I2C_SLV4_ADDR = 0x31,
    MPU6050_REG_ADDRESS_I2C_SLV4_REG = 0x32,
    MPU6050_REG_ADDRESS_I2C_SLV4_DO = 0x33,
    MPU6050_REG_ADDRESS_I2C_SLV4_CTRL = 0x34,
    MPU6050_REG_ADDRESS_I2C_SLV4_DI = 0x35,
    MPU6050_REG_ADDRESS_I2C_MST_STATUS = 0x36,
    MPU6050_REG_ADDRESS_INT_PIN_CFG = 0x37,
    MPU6050_REG_ADDRESS_INT_ENABLE = 0x38,
    MPU6050_REG_ADDRESS_DMP_INT_STATUS = 0x39,
    MPU6050_REG_ADDRESS_INT_STATUS = 0x3A,
    MPU6050_REG_ADDRESS_ACCEL_XOUT_H = 0x3B,
    MPU6050_REG_ADDRESS_ACCEL_XOUT_L = 0x3C,
    MPU6050_REG_ADDRESS_ACCEL_YOUT_H = 0x3D,
    MPU6050_REG_ADDRESS_ACCEL_YOUT_L = 0x3E,
    MPU6050_REG_ADDRESS_ACCEL_ZOUT_H = 0x3F,
    MPU6050_REG_ADDRESS_ACCEL_ZOUT_L = 0x40,
    MPU6050_REG_ADDRESS_TEMP_OUT_H = 0x41,
    MPU6050_REG_ADDRESS_TEMP_OUT_L = 0x42,
    MPU6050_REG_ADDRESS_GYRO_XOUT_H = 0x43,
    MPU6050_REG_ADDRESS_GYRO_XOUT_L = 0x44,
    MPU6050_REG_ADDRESS_GYRO_YOUT_H = 0x45,
    MPU6050_REG_ADDRESS_GYRO_YOUT_L = 0x46,
    MPU6050_REG_ADDRESS_GYRO_ZOUT_H = 0x47,
    MPU6050_REG_ADDRESS_GYRO_ZOUT_L = 0x48,
    MPU6050_REG_ADDRESS_EXT_SENS_DATA_00 = 0x49,
    MPU6050_REG_ADDRESS_EXT_SENS_DATA_01 = 0x4A,
    MPU6050_REG_ADDRESS_EXT_SENS_DATA_02 = 0x4B,
    MPU6050_REG_ADDRESS_EXT_SENS_DATA_03 = 0x4C,
    MPU6050_REG_ADDRESS_EXT_SENS_DATA_04 = 0x4D,
    MPU6050_REG_ADDRESS_EXT_SENS_DATA_05 = 0x4E,
    MPU6050_REG_ADDRESS_EXT_SENS_DATA_06 = 0x4F,
    MPU6050_REG_ADDRESS_EXT_SENS_DATA_07 = 0x50,
    MPU6050_REG_ADDRESS_EXT_SENS_DATA_08 = 0x51,
    MPU6050_REG_ADDRESS_EXT_SENS_DATA_09 = 0x52,
    MPU6050_REG_ADDRESS_EXT_SENS_DATA_10 = 0x53,
    MPU6050_REG_ADDRESS_EXT_SENS_DATA_11 = 0x54,
    MPU6050_REG_ADDRESS_EXT_SENS_DATA_12 = 0x55,
    MPU6050_REG_ADDRESS_EXT_SENS_DATA_13 = 0x56,
    MPU6050_REG_ADDRESS_EXT_SENS_DATA_14 = 0x57,
    MPU6050_REG_ADDRESS_EXT_SENS_DATA_15 = 0x58,
    MPU6050_REG_ADDRESS_EXT_SENS_DATA_16 = 0x59,
    MPU6050_REG_ADDRESS_EXT_SENS_DATA_17 = 0x5A,
    MPU6050_REG_ADDRESS_EXT_SENS_DATA_18 = 0x5B,
    MPU6050_REG_ADDRESS_EXT_SENS_DATA_19 = 0x5C,
    MPU6050_REG_ADDRESS_EXT_SENS_DATA_20 = 0x5D,
    MPU6050_REG_ADDRESS_EXT_SENS_DATA_21 = 0x5E,
    MPU6050_REG_ADDRESS_EXT_SENS_DATA_22 = 0x5F,
    MPU6050_REG_ADDRESS_EXT_SENS_DATA_23 = 0x60,
    MPU6050_REG_ADDRESS_MOT_DETECT_STATUS = 0x61,
    MPU6050_REG_ADDRESS_I2C_SLV0_DO = 0x63,
    MPU6050_REG_ADDRESS_I2C_SLV1_DO = 0x64,
    MPU6050_REG_ADDRESS_I2C_SLV2_DO = 0x65,
    MPU6050_REG_ADDRESS_I2C_SLV3_DO = 0x66,
    MPU6050_REG_ADDRESS_I2C_MST_DELAY_CTRL = 0x67,
    MPU6050_REG_ADDRESS_SIGNAL_PATH_RESET = 0x68,
    MPU6050_REG_ADDRESS_MOT_DETECT_CTRL = 0x69,
    MPU6050_REG_ADDRESS_USER_CTRL = 0x6A,
    MPU6050_REG_ADDRESS_PWR_MGMT_1 = 0x6B,
    MPU6050_REG_ADDRESS_PWR_MGMT_2 = 0x6C,
    MPU6050_REG_ADDRESS_BANK_SEL = 0x6D,
    MPU6050_REG_ADDRESS_MEM_START_ADDR = 0x6E,
    MPU6050_REG_ADDRESS_MEM_R_W = 0x6F,
    MPU6050_REG_ADDRESS_DMP_CFG_1 = 0x70,
    MPU6050_REG_ADDRESS_DMP_CFG_2 = 0x71,
    MPU6050_REG_ADDRESS_FIFO_COUNTH = 0x72,
    MPU6050_REG_ADDRESS_FIFO_COUNTL = 0x73,
    MPU6050_REG_ADDRESS_FIFO_R_W = 0x74,
    MPU6050_REG_ADDRESS_WHO_AM_I = 0x75,
};

typedef enum {
    MPU6050_GYRO_RANGE_250DPS = 0x00,
    MPU6050_GYRO_RANGE_500DPS = 0x01,
    MPU6050_GYRO_RANGE_1000DPS = 0x02,
    MPU6050_GYRO_RANGE_2000DPS = 0x03,
} mpu6050_gyro_range_t;

typedef enum {
    MPU6050_ACCEL_RANGE_2G = 0x00,
    MPU6050_ACCEL_RANGE_4G = 0x01,
    MPU6050_ACCEL_RANGE_8G = 0x02,
    MPU6050_ACCEL_RANGE_16G = 0x03,
} mpu6050_accel_range_t;

typedef enum {
    MPU6050_EXTERNAL_SYNC_DISABLED = 0x0,
    MPU6050_EXTERNAL_SYNC_TEMP_OUT_L = 0x1,
    MPU6050_EXTERNAL_SYNC_GYRO_XOUT_L = 0x2,
    MPU6050_EXTERNAL_SYNC_GYRO_YOUT_L = 0x3,
    MPU6050_EXTERNAL_SYNC_GYRO_ZOUT_L = 0x4,
    MPU6050_EXTERNAL_SYNC_ACCEL_XOUT_L = 0x5,
    MPU6050_EXTERNAL_SYNC_ACCEL_YOUT_L = 0x6,
    MPU6050_EXTERNAL_SYNC_ACCEL_ZOUT_L = 0x7,
} mpu6050_external_sync_t;

typedef enum {
    MPU6050_DLPF_BW_256 = 0x00,
    MPU6050_DLPF_BW_188 = 0x01,
    MPU6050_DLPF_BW_98 = 0x02,
    MPU6050_DLPF_BW_42 = 0x03,
    MPU6050_DLPF_BW_20 = 0x04,
    MPU6050_DLPF_BW_10 = 0x05,
    MPU6050_DLPF_BW_5 = 0x06,
} mpu6050_dlpf_t;

typedef enum DHPF {
    MPU6050_DHPF_RESET = 0x00,
    MPU6050_DHPF_5 = 0x01,
    MPU6050_DHPF_2P5 = 0x02,
    MPU6050_DHPF_1P25 = 0x03,
    MPU6050_DHPF_0P63 = 0x04,
    MPU6050_DHPF_HOLD = 0x07,
} mpu6050_dhpf_t;

typedef enum {
    MPU6050_CLOCK_DIVISION_500 = 0x9,
    MPU6050_CLOCK_DIVISION_471 = 0xA,
    MPU6050_CLOCK_DIVISION_444 = 0xB,
    MPU6050_CLOCK_DIVISION_421 = 0xC,
    MPU6050_CLOCK_DIVISION_400 = 0xD,
    MPU6050_CLOCK_DIVISION_381 = 0xE,
    MPU6050_CLOCK_DIVISION_364 = 0xF,
    MPU6050_CLOCK_DIVISION_348 = 0x0,
    MPU6050_CLOCK_DIVISION_333 = 0x1,
    MPU6050_CLOCK_DIVISION_320 = 0x2,
    MPU6050_CLOCK_DIVISION_308 = 0x3,
    MPU6050_CLOCK_DIVISION_296 = 0x4,
    MPU6050_CLOCK_DIVISION_286 = 0x5,
    MPU6050_CLOCK_DIVISION_276 = 0x6,
    MPU6050_CLOCK_DIVISION_267 = 0x7,
    MPU6050_CLOCK_DIVISION_258 = 0x8,
} mpu6050_clock_division_t;

typedef enum {
    MPU6050_INT_MODE_ACTIVEHIGH = 0x00,
    MPU6050_INT_MODE_ACTIVELOW = 0x01,
} mpu6050_int_mode_t;

typedef enum {
    MPU6050_INT_DRIVE_PUSHPULL = 0x00,
    MPU6050_INT_DRIVE_OPENDRAIN = 0x01,
} mpu6050_int_drive_t;

typedef enum {
    MPU6050_INT_LATCH_PULSE50US = 0x00,
    MPU6050_INT_LATCH_WAITCLEAR = 0x01,
} mpu6050_int_latch_t;

typedef enum {
    MPU6050_INT_CLEAR_STATUSREAD = 0x00,
    MPU6050_INT_CLEAR_ANYREAD = 0x01,
} mpu6050_int_clear_t;

typedef enum {
    MPU6050_DETECT_DECREMENT_RESET = 0x0,
    MPU6050_DETECT_DECREMENT_1 = 0x1,
    MPU6050_DETECT_DECREMENT_2 = 0x2,
    MPU6050_DETECT_DECREMENT_4 = 0x3,
} mpu6050_detect_decrement_t;

typedef enum {
    MPU6050_DELAY_3MS = 0b11,
    MPU6050_DELAY_2MS = 0b10,
    MPU6050_DELAY_1MS = 0b01,
    MPU6050_DELAY_DISABLED = 0b00,
} mpu6050_delay_t;

typedef enum {
    MPU6050_CLOCK_INTERNAL = 0x00,
    MPU6050_CLOCK_PLL_XGYRO = 0x01,
    MPU6050_CLOCK_PLL_YGYRO = 0x02,
    MPU6050_CLOCK_PLL_ZGYRO = 0x03,
    MPU6050_CLOCK_PLL_EXT32K = 0x04,
    MPU6050_CLOCK_PLL_EXT19M = 0x05,
    MPU6050_CLOCK_KEEP_RESET = 0x07,
} mpu6050_clock_t;

typedef enum {
    MPU6050_WAKE_FREQUENCY_1P25 = 0x0,
    MPU6050_WAKE_FREQUENCY_5 = 0x1,
    MPU6050_WAKE_FREQUENCY_20 = 0x2,
    MPU6050_WAKE_FREQUENCY_40 = 0x3,
} mpu6050_wake_frequency_t;

typedef struct {
    float32_t accel_scale;
    float32_t gyro_scale;
} mpu6050_config_t;

typedef struct {
    void* bus_user;
    mpu6050_err_t (*bus_init)(void*);
    mpu6050_err_t (*bus_deinit)(void*);
    mpu6050_err_t (*bus_write)(void*, uint8_t, uint8_t const*, size_t);
    mpu6050_err_t (*bus_read)(void*, uint8_t, uint8_t*, size_t);
} mpu6050_interface_t;

#endif // MPU6050_MPU6050_CONFIG_H